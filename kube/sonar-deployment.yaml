
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonar-claim
  namespace: kube-ops
  annotations:
    volume.beta.kubernetes.io/storage-class: "local-path"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: kube-ops
  labels:
    app: sonarqube
spec:
  # serviceName: sonar
  selector:
    matchLabels:
      app: sonarqube
  replicas: 1
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: sonarqube
        image: sonarqube:latest
        # securityContext:                     
        #   runAsUser: 0
        #   privileged: true
        ports:
        - name: http
          containerPort: 9000
        # resources:
        #   limits:
        #     memory: 8Gi
        #     cpu: "4000m"
        #   requests:
        #     memory: 2Gi
        #     cpu: "2000m"
        env:
        - name: SONARQUBE_JDBC_USERNAME
          value: postgres
        - name: SONARQUBE_JDBC_PASSWORD
          value: "123456"
        - name: SONARQUBE_JDBC_URL
          value: jdbc:postgresql://postgres.kube-rds:5432/sonar
        volumeMounts:
        - name: data
          mountPath: /opt/sonarqube/conf
          subPath: conf
        - mountPath: /opt/sonarqube/data
          name: data
          subPath: data
        - mountPath: /opt/sonarqube/extensions
          name: data
          subPath: extensions
        - mountPath: /opt/sonarqube/logs
          name: data
          subPath: logs
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: sonar-claim
---
apiVersion: v1
kind: Service
metadata:
  name: sonar
  namespace: kube-ops
  labels:
    app: sonarqube
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 9000
    targetPort: 9000
  selector:
    app: sonarqube
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-sonar
  namespace: kube-ops
spec:
  rules:
  - host: sonar.i.com 
    http:
      paths:
      - path: /
        pathType: "Prefix"
        backend:
          service:
            name: sonar
            port:
              name: http