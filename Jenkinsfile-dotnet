def Version = "v1.0.${BUILD_NUMBER}"
def SolutionName = "${JOB_NAME.replaceAll("/","-").replaceAll("%2F","_")}";
pipeline {
  agent {
    kubernetes { 
      cloud 'kubernetes'
      inheritFrom 'jnlp'
      containerTemplate {
        name 'dotnet'
        image 'mcr.microsoft.com/dotnet/sdk:5.0'
        ttyEnabled true
        command 'cat'
      }
    }
  }

  stages {
    stage('代码编译打包') {
        steps {
            container('dotnet') {
              echo "代码编译打包....${env.BRANCH_NAME}" 
              sh 'dotnet --version'
              // sh 'dotnet build'
            }
        }
    }

    stage('代码分析') {
        steps{
          withSonarQubeEnv('sonarqube') {
            container('dotnet') { 
              sh 'dotnet --version'
              sh 'dotnet tool install --global dotnet-sonarscanner'
              sh "dotnet sonarscanner begin /k:${SolutionName} /n:${SolutionName} /v:${Version}"
              // sh "dotnet sonarscanner begin /k:jenkins-demo /n:jenkins-demo /v:${Version} -Dsonar.branch.name=${env.BRANCH_NAME}"
              sh 'dotnet build'
              sh 'dotnet sonarscanner end'
            }
          }
        }
    }

    stage('提交镜像') {
        steps {
            container('kaniko') {
                script { 
                  echo "提交镜像....${env.BRANCH_NAME}" 
                  sh "which kaniko"
                }
            }
        }
    }

    stage('部署') {
        steps {
            container('kubectl') {
                echo "部署....${env.BRANCH_NAME}" 
                sh "which kubectl"
            }
        }
    }
  }

  post { 
    success { echo "success"  }
    failure { echo "failure"  }
    always  { echo "always"  }
  }
}